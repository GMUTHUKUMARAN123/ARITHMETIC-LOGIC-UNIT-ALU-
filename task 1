
module ALU (
    input [3:0] A,      
    input [3:0] B,       
    input [2:0] ALU_Sel, 
    output reg [3:0] ALU_Out,
    output reg CarryOut
);

always @(*) begin
    case(ALU_Sel)
        3'b000: {CarryOut, ALU_Out} = A + B;       
        3'b001: {CarryOut, ALU_Out} = A - B;      
        3'b010: ALU_Out = A & B;                   
        3'b011: ALU_Out = A | B;                   
        3'b100: ALU_Out = ~A;                     
        default: ALU_Out = 4'b0000;
    endcase
end

endmodule
output:
| A    | B    | Sel | OUT  | Zero |
| ---- | ---- | --- | ---- | ---- |
| 0011 | 0001 | 000 | 0100 | 0    |
| 0100 | 0011 | 001 | 0001 | 0    |
| 1100 | 1010 | 010 | 1000 | 0    |
| 1100 | 1010 | 011 | 1110 | 0    |
| 1111 | 0000 | 100 | 0000 | 1    |
